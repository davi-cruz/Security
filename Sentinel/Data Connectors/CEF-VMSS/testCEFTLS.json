{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Base_Name": {
            "type": "string"
        },
        "Autoscale_Min": {
            "type": "int",
            "defaultValue": 1
        },
        "Autoscale_Max": {
            "type": "int",
            "defaultValue": 10
        },
        "AdminUserName": {
            "type": "string",
            "defaultValue": "syslogcef"
        },
        "AdminPassword": {
            "type": "securestring"
        },
        "workspaceId": {
            "type": "string"
        },
        "workspaceKey": {
            "type": "string"
        }
    },
    "variables": {
        "vmss_Name": "[concat(parameters('Base_Name'), '-vmss')]",
        "storage_name": "[replace(tolower(concat(parameters('Base_Name'), 'diag')),'-','')]",
        "nsg_Name": "[concat(parameters('Base_Name'),'-nsg')]",
        "vnet_Name": "[concat(parameters('Base_Name'), '-vnet')]",
        "pip_Name": "[concat(parameters('Base_Name'),'-pip')]",
        "autoscale_Name": "[concat(parameters('Base_Name'),'-autoscale')]",
        "loadbalancer_Name": "[concat(parameters('Base_Name'),'-lb')]",
        "maxPortRange": "[if(lessOrEquals(parameters('Autoscale_Max'), 9), '5000', '500')]",
        "cloudinit": ""
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storage_name')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "supportsHttpsTrafficOnly": true
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-09-01",
            "name": "[variables('NSG_Name')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow-Syslog",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "514",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound",
                            "sourcePortRanges": [
                            ],
                            "destinationPortRanges": [
                            ],
                            "sourceAddressPrefixes": [
                            ],
                            "destinationAddressPrefixes": [
                            ]
                        }
                    },
                    {
                        "name": "Allow-SSH",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1001,
                            "direction": "Inbound",
                            "sourcePortRanges": [
                            ],
                            "destinationPortRanges": [
                            ],
                            "sourceAddressPrefixes": [
                            ],
                            "destinationAddressPrefixes": [
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-09-01",
            "name": "[concat(variables('nsg_Name'), '/Allow-Syslog')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg_Name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "514",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1000,
                "direction": "Inbound",
                "sourcePortRanges": [
                ],
                "destinationPortRanges": [
                ],
                "sourceAddressPrefixes": [
                ],
                "destinationAddressPrefixes": [
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-09-01",
            "name": "[concat(variables('nsg_Name'), '/Allow-SSH')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg_Name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1001,
                "direction": "Inbound",
                "sourcePortRanges": [
                ],
                "destinationPortRanges": [
                ],
                "sourceAddressPrefixes": [
                ],
                "destinationAddressPrefixes": [
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-11-01",
            "name": "[variables('vnet_Name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg_Name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg_Name'))]"
                            },
                            "serviceEndpoints": [
                            ],
                            "delegations": [
                            ],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-11-01",
            "name": "[concat(variables('vnet_Name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet_Name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.0.0/24",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Networks/networkSecurityGroups', variables('nsg_Name'))]"
                },
                "serviceEndpoints": [
                ],
                "delegations": [
                ],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-09-01",
            "name": "[variables('PIP_Name')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[tolower(concat(parameters('Base_Name'), 'vmss'))]",
                    "fqdn": "[tolower(concat(parameters('Base_Name'), 'vmss','.',resourceGroup().location,'.cloudapp.azure.com'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2019-09-01",
            "name": "[variables('loadbalancer_Name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('pip_Name'))]"
            ],
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontEnd",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pip_Name'))]"
                            },
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "bepool",
                        "properties": {
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "LBSyslogTCPRule",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadbalancer_Name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                            },
                            "frontendPort": 514,
                            "backendPort": 514,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "protocol": "TCP",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "disableOutboundSnat": false,
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadbalancer_Name')), '/backendAddressPools/bepool')]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadbalancer_Name')), '/probes/tcpProbe')]"
                            }
                        }
                    },
                    {
                        "name": "LBSyslogUDPRule",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadbalancer_Name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                            },
                            "frontendPort": 514,
                            "backendPort": 514,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "protocol": "Udp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "disableOutboundSnat": false,
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadbalancer_Name')), '/backendAddressPools/bepool')]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadbalancer_Name')), '/probes/tcpProbe')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "tcpProbe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 514,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ],
                "inboundNatRules": [
                ],
                "outboundRules": [
                ],
                "inboundNatPools": [
                    {
                        "name": "natPool",
                        "properties": {
                            "frontendPortRangeStart": 50000,
                            "frontendPortRangeEnd": "[concat(variables('maxPortRange'), parameters('Autoscale_Max'))]",
                            "backendPort": 22,
                            "protocol": "Tcp",
                            "idleTimeoutInMinutes": 4,
                            "enableFloatingIP": false,
                            "enableTcpReset": false,
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadbalancer_Name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "apiVersion": "2019-03-01",
            "name": "[variables('vmss_Name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg_Name'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet_Name'))]",
                "[resourceId('Microsoft.Network/loadBalancers', variables('loadbalancer_Name'))]"
            ],
            "sku": {
                "name": "Standard_F4s_v2",
                "tier": "Standard",
                "capacity": "[parameters('Autoscale_Min')]"
            },
            "properties": {
                "singlePlacementGroup": true,
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "osProfile": {
                        "computerNamePrefix": "[parameters('Base_Name')]",
                        "adminUsername": "[parameters('AdminUserName')]",
                        "adminPassword": "[parameters('AdminPassword')]",
                        "linuxConfiguration": {
                            "disablePasswordAuthentication": false,
                            "provisionVMAgent": true
                        },
                        "secrets": [
                            {
                                "sourceVault": {
                                    "id": "/subscriptions/0aee32c5-9170-4b6f-870a-6fcbaa2f6b89/resourceGroups/dc-mgmt-rsyslog-tls/providers/Microsoft.KeyVault/vaults/kv-dc-mgmt-rsyslog"
                                },
                                "vaultCertificates": [
                                    {
                                        "certificateUrl": "https://kv-dc-mgmt-rsyslog.vault.azure.net:443/certificates/DaviCruzNetRsyslogTLS/d7f822db19e542bf9f86c798fe23628e"
                                    },
                                    {
                                        "certificateUrl": "https://kv-dc-mgmt-rsyslog.vault.azure.net:443/secrets/DaviCruzNetRsyslogTLS/d7f822db19e542bf9f86c798fe23628e"
                                    }
                                ]
                            }
                        ],
                        "customData": "[variables('cloudinit')]"
                    },
                    "storageProfile": {
                        "osDisk": {
                            "createOption": "FromImage",
                            "caching": "ReadWrite",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            },
                            "diskSizeGB": 32
                        },
                        "imageReference": {
                            "publisher": "Canonical",
                            "offer": "UbuntuServer",
                            "sku": "18.04-LTS",
                            "version": "latest"
                        }
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[concat(parameters('Base_Name'), '-nic')]",
                                "properties": {
                                    "primary": true,
                                    "enableAcceleratedNetworking": false,
                                    "dnsSettings": {
                                        "dnsServers": [
                                        ]
                                    },
                                    "enableIPForwarding": false,
                                    "ipConfigurations": [
                                        {
                                            "name": "[concat(parameters('Base_Name'), '-ipConfig')]",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('vnet_Name')), '/subnets/default')]"
                                                },
                                                "privateIPAddressVersion": "IPv4",
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadbalancer_Name')), '/backendAddressPools/bepool')]"
                                                    }
                                                ],
                                                "loadBalancerInboundNatPools": [
                                                    {
                                                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers/', variables('loadbalancer_Name')), '/inboundNatPools/natPool')]"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "diagnosticsProfile": {
                        "bootDiagnostics": {
                            "enabled": true,
                            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storage_name'))).primaryEndpoints.blob]"
                        }
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "type": "extensions",
                                "name": "OMSExtension",
                                "location": "[resourceGroup().location]",
                                "properties": {
                                    "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                                    "type": "OmsAgentForLinux",
                                    "typeHandlerVersion": "1.4",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {
                                        "workspaceId": "[parameters('workspaceId')]",
                                        "stopOnMultipleConnections": "true"
                                    },
                                    "protectedSettings": {
                                        "workspaceKey": "[parameters('workspaceKey')]"
                                    }
                                }
                            },
                            {
                                "type": "extensions",
                                "name": "DependencyAgentLinux",
                                "location": "[resourceGroup().location]",
                                "properties": {
                                    "publisher": "Microsoft.Azure.Monitoring.DependencyAgent",
                                    "type": "DependencyAgentLinux",
                                    "typeHandlerVersion": "9.5",
                                    "autoUpgradeMinorVersion": true
                                }
                            }
                        ]
                    },
                    "priority": "Regular"
                },
                "overprovision": true,
                "doNotRunExtensionsOnOverprovisionedVMs": false,
                "platformFaultDomainCount": 5
            }
        },
        {
            "type": "microsoft.insights/autoscalesettings",
            "apiVersion": "2014-04-01",
            "name": "[variables('autoscale_Name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmss_Name'))]"
            ],
            "properties": {
                "profiles": [
                    {
                        "name": "Profile1",
                        "capacity": {
                            "minimum": "[parameters('Autoscale_Min')]",
                            "maximum": "[parameters('Autoscale_Max')]",
                            "default": "[parameters('Autoscale_Min')]"
                        },
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricNamespace": "",
                                    "metricResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmss_Name'))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "GreaterThan",
                                    "threshold": 75,
                                    "dimensions": [
                                    ],
                                    "dividePerInstance": false
                                },
                                "scaleAction": {
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT1M"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricNamespace": "",
                                    "metricResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmss_Name'))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "LessThan",
                                    "threshold": 25,
                                    "dimensions": [
                                    ],
                                    "dividePerInstance": false
                                },
                                "scaleAction": {
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT1M"
                                }
                            }
                        ]
                    }
                ],
                "enabled": true,
                "name": "[concat(parameters('Base_Name'), '-autoscale')]",
                "targetResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmss_Name'))]"
            }
        }
    ],
    "outputs": {
        "customData": {
            "type": "string",
            "value": "[variables('cloudinit')]"
        },
        "osprofile": {
            "type": "object",
            "value": "[reference(variables('vmss_Name'))]"
        }
    }
}
