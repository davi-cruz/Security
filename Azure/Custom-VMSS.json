{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Base_Name": {
            "type": "string"
        },
        "Autoscale_Min": {
            "type": "int",
            "defaultValue": 1
        },
        "Autoscale_Max": {
            "type": "int",
            "defaultValue": 10
        },
        "AdminUserName": {
            "type": "string",
            "defaultValue": "syslogcef"
        },
        "AdminPassword": {
            "type": "securestring"
        },
        "workspaceId": {
            "type": "string"
        },
        "workspaceKey": {
            "type": "string"
        },
        "subnetResourceId": {
            "type": "string",
            "defaultValue": "/subscriptions/<subscriptionid>/resourceGroups/<rgName>/providers/Microsoft.Network/virtualNetworks/<vnetName>/subnets/<subnetName>"
        }
    },
    "variables": {
        "vmss_Name": "[concat('vmss-', parameters('Base_Name'))]",
        "storage_name": "[replace(tolower(concat(parameters('Base_Name'), 'diag')),'-', '')]",
        "autoscale_Name": "[concat('autoscale-', parameters('Base_Name'))]",
        "loadbalancer_Name": "[concat('lb-', parameters('Base_Name'))]",
        "maxPortRange": "[if(lessOrEquals(parameters('Autoscale_Max'), 9), '5000', '500')]",
        "cloudinit": "[concat('#cloud-config\ndisk_setup:\n  /dev/disk/azure/scsi1/lun0:\n    table_type: gpt\n    layout: true\n    overwrite: false\nfs_setup:\n  - device: /dev/disk/azure/scsi1/lun0\n    partition: 1\n    filesystem: ext4\nmounts:\n  - [\n    \"/dev/disk/azure/scsi1/lun0-part1\",\n    \"/opt/syslog-data\",\n    auto,\n    \"defaults,noexec,nofail\",\n    ]\nwrite_files:\n  - path: /etc/rsyslog.d/60-cef.conf.bak\n    owner: root:root\n    permissions: ''0644''\n    content: |\n      ruleset(name=\"forwarddata\"){\n        # Filtrar eventos indesejados\n        #if prifilt(\"auth,authpriv.*\") then {\n        #  stop\n        #}\n\n        # Envia eventos CEF para o Workspace\n        if ($rawmsg contains \"CEF:\") or ($rawmsg contains \"ASA-\") then {\n          action(type=\"omfwd\"\n            target=\"127.0.0.1\"\n            port=\"25226\"\n            protocol=\"tcp\"\n            queue.type=\"fixedArray\"\n            queue.dequeueBatchSize=\"128\"\n            queue.workerThreads=\"5\"\n            queue.spoolDirectory=\"/var/opt/microsoft/linuxmonagent\"\n            queue.filename=\"omsagentqueue\"\n            queue.maxdiskspace=\"5g\"\n            queue.size=\"50000\"\n            queue.highwatermark=\"30000\"\n            queue.lowwatermark=\"25000\"\n            queue.saveonshutdown=\"on\"\n            action.resumeretrycount=\"-1\"\n            action.resumeinterval = \"3\"\n          )\n          stop\n        }\n\n        # Envia eventos Syslog para o Workspace\n        #local4.* @127.0.0.1:25224\n      }\nruncmd:\n  - while ( ! (find /var/log/azure/Microsoft.EnterpriseCloud.Monitoring.OmsAgentForLinux/extension.log | xargs grep \"Enable,success,0,Enable succeeded\")); do sleep 5; done\n  - sudo apt-get update\n  - sudo echo \\\"root         soft    nofile         65536\\\" >> /etc/security/limits.conf\n  - sudo echo \\\"root         hard    nofile         65536\\\" >> /etc/security/limits.conf\n  - sudo echo \\\"*         soft    nofile         65536\\\" >> /etc/security/limits.conf\n  - sudo echo \\\"*         hard    nofile         65536\\\" >> /etc/security/limits.conf\n  - sudo wget https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/DataConnectors/CEF/cef_installer.py&&sudo python cef_installer.py ', parameters('workspaceId'), ' ', parameters('workspaceKey'), '\n  - sudo wget https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/DataConnectors/CEF/TimeGenerated.py && echo Yes | sudo python TimeGenerated.py ', parameters('workspaceId'), '\n  - sudo sed -i -e ''s@input(type=\"imudp\" port=\"514\")@input(type=\"imudp\" port=\"514\" ruleset=\"forwarddata\")@g'' /etc/rsyslog.conf\n  - sudo sed -i -e ''s@input(type=\"imtcp\" port=\"514\")@input(type=\"imtcp\" port=\"514\" ruleset=\"forwarddata\")@g'' /etc/rsyslog.conf\n  - sudo rm /etc/rsyslog.d/security-config-omsagent.conf\n  - sudo mv /etc/rsyslog.d/60-cef.conf.bak /etc/rsyslog.d/60-cef.conf\n  - sudo sed -i -e ''s@/var/opt/microsoft/omsagent/', parameters('workspaceId'), '/state@/opt/syslog-data@g'' /etc/opt/microsoft/omsagent/', parameters('workspaceId'), '/conf/omsagent.conf\n  - sudo chown omsagent:omiusers /opt/syslog-data\n  - sudo systemctl restart rsyslog\n  - sudo /opt/microsoft/omsagent/bin/service_control stop ', parameters('workspaceId'), '\n  - sudo /opt/microsoft/omsagent/bin/service_control start ', parameters('workspaceId'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storage_name')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "supportsHttpsTrafficOnly": true
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2019-09-01",
            "name": "[variables('loadbalancer_Name')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontEnd",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[parameters('subnetResourceId')]"
                            },
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "bepool",
                        "properties": {
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "LBSyslogTCPRule",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadbalancer_Name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                            },
                            "frontendPort": 514,
                            "backendPort": 514,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "protocol": "TCP",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "disableOutboundSnat": false,
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadbalancer_Name')), '/backendAddressPools/bepool')]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadbalancer_Name')), '/probes/tcpProbe')]"
                            }
                        }
                    },
                    {
                        "name": "LBSyslogUDPRule",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadbalancer_Name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                            },
                            "frontendPort": 514,
                            "backendPort": 514,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "protocol": "Udp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "disableOutboundSnat": false,
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadbalancer_Name')), '/backendAddressPools/bepool')]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadbalancer_Name')), '/probes/tcpProbe')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "tcpProbe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 514,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ],
                "inboundNatRules": [
                ],
                "outboundRules": [
                ],
                "inboundNatPools": [
                    {
                        "name": "natPool",
                        "properties": {
                            "frontendPortRangeStart": 50000,
                            "frontendPortRangeEnd": "[concat(variables('maxPortRange'), parameters('Autoscale_Max'))]",
                            "backendPort": 22,
                            "protocol": "Tcp",
                            "idleTimeoutInMinutes": 4,
                            "enableFloatingIP": false,
                            "enableTcpReset": false,
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadbalancer_Name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "apiVersion": "2019-03-01",
            "name": "[variables('vmss_Name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_name'))]",
                "[resourceId('Microsoft.Network/loadBalancers', variables('loadbalancer_Name'))]"
            ],
            "sku": {
                "name": "Standard_F4s_v2",
                "tier": "Standard",
                "capacity": "[parameters('Autoscale_Min')]"
            },
            "properties": {
                "singlePlacementGroup": true,
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "osProfile": {
                        "computerNamePrefix": "[parameters('Base_Name')]",
                        "adminUsername": "[parameters('AdminUserName')]",
                        "adminPassword": "[parameters('AdminPassword')]",
                        "linuxConfiguration": {
                            "disablePasswordAuthentication": false,
                            "provisionVMAgent": true
                        },
                        "secrets": [
                        ],
                        "customData": "[base64(variables('cloudinit'))]"
                    },
                    "storageProfile": {
                        "osDisk": {
                            "createOption": "FromImage",
                            "caching": "ReadWrite",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            },
                            "diskSizeGB": 32
                        },
                        "imageReference": {
                            "publisher": "Canonical",
                            "offer": "UbuntuServer",
                            "sku": "18.04-LTS",
                            "version": "latest"
                        },
                        "dataDisks": [
                            {
                                "lun": 0,
                                "createOption": "Empty",
                                "caching": "None",
                                "managedDisk": {
                                    "storageAccountType": "Premium_LRS"
                                },
                                "diskSizeGB": 8
                            }
                        ]
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[concat('nic-', parameters('Base_Name'))]",
                                "properties": {
                                    "primary": true,
                                    "enableAcceleratedNetworking": false,
                                    "dnsSettings": {
                                        "dnsServers": [
                                        ]
                                    },
                                    "enableIPForwarding": false,
                                    "ipConfigurations": [
                                        {
                                            "name": "[concat('ipconfig-', parameters('Base_Name'))]",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[parameters('subnetResourceId')]"
                                                },
                                                "privateIPAddressVersion": "IPv4",
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadbalancer_Name')), '/backendAddressPools/bepool')]"
                                                    }
                                                ],
                                                "loadBalancerInboundNatPools": [
                                                    {
                                                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers/', variables('loadbalancer_Name')), '/inboundNatPools/natPool')]"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "diagnosticsProfile": {
                        "bootDiagnostics": {
                            "enabled": true,
                            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storage_name'))).primaryEndpoints.blob]"
                        }
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "type": "extensions",
                                "name": "OMSExtension",
                                "location": "[resourceGroup().location]",
                                "properties": {
                                    "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                                    "type": "OmsAgentForLinux",
                                    "typeHandlerVersion": "1.4",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {
                                        "workspaceId": "[parameters('workspaceId')]",
                                        "stopOnMultipleConnections": "true"
                                    },
                                    "protectedSettings": {
                                        "workspaceKey": "[parameters('workspaceKey')]"
                                    }
                                }
                            },
                            {
                                "type": "extensions",
                                "name": "DependencyAgentLinux",
                                "location": "[resourceGroup().location]",
                                "properties": {
                                    "publisher": "Microsoft.Azure.Monitoring.DependencyAgent",
                                    "type": "DependencyAgentLinux",
                                    "typeHandlerVersion": "9.5",
                                    "autoUpgradeMinorVersion": true
                                }
                            }
                        ]
                    },
                    "priority": "Regular"
                },
                "overprovision": true,
                "doNotRunExtensionsOnOverprovisionedVMs": false,
                "platformFaultDomainCount": 5
            }
        },
        {
            "type": "microsoft.insights/autoscalesettings",
            "apiVersion": "2014-04-01",
            "name": "[variables('autoscale_Name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmss_Name'))]"
            ],
            "properties": {
                "profiles": [
                    {
                        "name": "Profile1",
                        "capacity": {
                            "minimum": "[parameters('Autoscale_Min')]",
                            "maximum": "[parameters('Autoscale_Max')]",
                            "default": "[parameters('Autoscale_Min')]"
                        },
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricNamespace": "",
                                    "metricResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmss_Name'))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "GreaterThan",
                                    "threshold": 75,
                                    "dimensions": [
                                    ],
                                    "dividePerInstance": false
                                },
                                "scaleAction": {
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT1M"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricNamespace": "",
                                    "metricResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmss_Name'))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "LessThan",
                                    "threshold": 25,
                                    "dimensions": [
                                    ],
                                    "dividePerInstance": false
                                },
                                "scaleAction": {
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT1M"
                                }
                            }
                        ]
                    }
                ],
                "enabled": true,
                "name": "[concat('autoscale-', parameters('Base_Name'))]",
                "targetResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmss_Name'))]"
            }
        }
    ],
    "outputs": {
        "b64customData": {
            "type": "string",
            "value": "[base64(variables('cloudinit'))]"
        },
        "customData": {
            "type": "string",
            "value": "[variables('cloudinit')]"
        },
        "osprofile": {
            "type": "object",
            "value": "[reference(variables('vmss_Name'))]"
        }
    }
}